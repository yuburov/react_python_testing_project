{"version":3,"sources":["components/Form.js","components/Admin.js","redux/actions/actionTypes.js","redux/actions/auth.js","components/login/Login.js","components/navbar/Navbar.js","App.js","reportWebVitals.js","redux/utility.js","redux/reducers/authReducer.js","redux/redux-store.js","index.js"],"names":["MyTextField","placeholder","props","useField","field","meta","errorText","error","touched","TextField","helperText","submit","surname","name","lastName","phone","address","inn","setSubmitting","resetForm","axios","then","res","console","log","data","initialValues","UserForm","Box","marginTop","marginBottom","Container","maxWidth","Card","CardContent","Typography","variant","validateOnChange","validationSchema","object","string","required","number","onSubmit","values","errors","isSubmitting","isValidating","autoComplete","FormGroup","type","label","Button","color","disabled","useStyles","makeStyles","table","minWidth","Admin","useState","users","setUsers","useEffect","headers","localStorage","getItem","classes","style","textAlign","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","user","scope","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","authSuccess","token","actionTypes","logout","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","post","key","expirationDate","Date","getTime","setItem","catch","err","FormikField","as","fullWidth","SignupSchema","Yup","shape","min","Login","useDispatch","history","useHistory","display","justifyContent","auth","push","dirty","isValid","Navbar","exact","to","activeClassName","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","loading","authStart","state","action","authFail","authLogout","reducer","reducers","combineReducers","authReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.180ff176.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Button, Card, CardContent, FormGroup, TextField, Typography } from '@material-ui/core';\nimport {Form, Formik, useField} from 'formik';\nimport { number, object, string } from 'yup';\nimport Container from \"@material-ui/core/Container\";\nimport * as axios from \"axios\";\n\nconst MyTextField = ({placeholder, ...props}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n      <TextField\n          placeholder={placeholder}\n          {...field}\n          helperText={errorText}\n          error={!!errorText}\n      />\n  )\n}\n\nconst submit = ({surname, name, lastName, phone, address, inn}, { setSubmitting, resetForm }) => {\n   axios.post(`http://127.0.0.1:8000/api/user/create/`, {surname, name, lastName, phone, address, inn})\n      .then(res => {\n        resetForm({})\n        console.log(res.data)\n        return res.data\n      })\n  setSubmitting(false)\n}\n\nconst initialValues = {\n  surname: '',\n  name: '',\n  lastName: '',\n  phone: '',\n  address: '',\n  inn: ''\n};\n\nfunction UserForm (props) {\n  return (\n      <Box marginTop={7} marginBottom={4}>\n        <Container maxWidth=\"md\">\n          <Card>\n            <CardContent>\n              <Typography variant=\"h4\">New User</Typography>\n\n              <Formik\n                  validateOnChange={true}\n                  validationSchema={\n                    object({\n                      surname: string().required(),\n                      name: string().required(),\n                      lastName: string().required(),\n                      phone: number().required(),\n                      address: string().required(),\n                      inn: string().required(),\n                    })\n                  }\n                  initialValues={initialValues} onSubmit={submit}>\n                {({ values, errors, isSubmitting, isValidating }) => (\n                    <Form autoComplete='off'>\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Surname' name=\"surname\" type='input' label=\"Surname\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Name' name=\"name\" type='input' label=\"Name\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n\n                        <FormGroup>\n                          <MyTextField placeholder='Last name' name=\"lastName\" type='input' label=\"Last name\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Phone' name=\"phone\" type='input' label=\"Phone\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Address' name=\"address\" type='input' label=\"Address\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Inn' name=\"inn\" type='input' label=\"Inn\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Button variant={\"contained\"} color={\"primary\"} type=\"submit\" disabled={isSubmitting || isValidating}>Save</Button>\n                    </Form>\n                )}\n              </Formik>\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n\n  );\n}\n\nexport default UserForm","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {Box} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport * as axios from \"axios\";\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 320,\n  },\n});\n\nfunction Admin(props) {\n  const [users, setUsers] = useState([])\n\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/api/`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n            \"Authorization\": `Token ${localStorage.getItem('token')}`\n        }\n    })\n    .then(res => {\n          setUsers(res.data)\n        })\n  },[])\n\n  const classes = useStyles();\n\n  return (\n      <Box marginTop={5}>\n        <Container maxWidth=\"md\">\n          <h2 style={{textAlign: 'center'}}>List of users</h2>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Surname</TableCell>\n                  <TableCell align=\"right\">Name</TableCell>\n                  <TableCell align=\"right\">Last name</TableCell>\n                  <TableCell align=\"right\">Phone</TableCell>\n                  <TableCell align=\"right\">Address</TableCell>\n                  <TableCell align=\"right\">Inn</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map((user) => (\n                    <TableRow key={user.name}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {user.surname}\n                      </TableCell>\n                      <TableCell align=\"right\">{user.name}</TableCell>\n                      <TableCell align=\"right\">{user.lastName}</TableCell>\n                      <TableCell align=\"right\">{user.phone}</TableCell>\n                      <TableCell align=\"right\">{user.address}</TableCell>\n                      <TableCell align=\"right\">{user.inn}</TableCell>\n                    </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Container>\n      </Box>\n  );\n}\n\nexport default Admin;\n\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  }\n}\n\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  }\n}\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  }\n}\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000)\n  }\n}\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n      username: username,\n      password: password\n    })\n        .then(res => {\n          const token = res.data.key;\n          const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n          localStorage.setItem('token', token);\n          localStorage.setItem('expirationDate', expirationDate);\n          dispatch(authSuccess(token));\n          dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n          dispatch(authFail(err))\n        })\n  }\n}\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      if ( expirationDate <= new Date() ) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n      }\n    }\n  }\n}","import React from \"react\";\nimport {Formik, Form, ErrorMessage, Field} from \"formik\";\nimport * as Yup from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport {TextField} from \"@material-ui/core\";\nimport './Login.css'\nimport {useDispatch} from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport {authLogin} from \"../../redux/actions/auth\";\n\nconst FormikField = ({ name, label, type = \"text\", required = false}) => {\n  return (\n      <div className=\"formikField\">\n        <Field\n            required={required}\n            autoComplete=\"off\"\n            as={TextField}\n            label={label}\n            name={name}\n            fullWidth\n            type={type}\n            helperText={<ErrorMessage name={name} />}\n        />\n      </div>\n  );\n};\n\nconst initialValues = {\n  username: \"\",\n  password: \"\"\n};\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n      .min(4, \"Too Short!\")\n      .required(\"Required\"),\n  password: Yup.string()\n      .min(5, \"Too Short!\")\n      .required(\"Required\")\n});\n\nconst Login = (props) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const handleSubmit = (values) => {\n    dispatch(authLogin(values.name, values.password)\n        .then((auth) => {\n          history.push('/')\n        }))\n  };\n\n  return (\n      <div style={{display: 'flex', justifyContent: 'center'}}>\n        <div className=\"login\">\n          <h1>Sign Up</h1>\n          <Formik\n              initialValues={initialValues}\n              onSubmit={handleSubmit}\n              validationSchema={SignupSchema}\n          >\n            {({ dirty, isValid }) => {\n              return (\n                  <Form>\n                    <FormikField name=\"name\" label=\"Name\" required />\n                    <FormikField name=\"password\" type='password' label=\"Password\" required />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={!dirty || !isValid}\n                        type=\"submit\"\n                    >\n                      Primary\n                    </Button>\n                  </Form>\n              );\n            }}\n          </Formik>\n        </div>\n      </div>\n\n  );\n};\n\nexport default Login;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nconst Navbar = () => {\n\n  return (\n      <nav>\n        <div className=\"logo\">\n          Test<font>Project</font>\n        </div>\n        <ul className=\"menu-list\">\n          <li>\n            <NavLink exact to='/' activeClassName=\"active\">\n              Home\n            </NavLink>\n          </li>\n          <li>\n            <NavLink exact to='/login' activeClassName=\"active\">\n              Login\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n  );\n};\n\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport UserForm from \"./components/Form\";\nimport Admin from \"./components/Admin\";\nimport Login from \"./components/login/Login\";\nimport Navbar from \"./components/navbar/Navbar\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path='/' exact>\n            <UserForm/>\n          </Route>\n          <Route path='/admin_page' exact>\n            <Admin/>\n          </Route>\n          <Route path='/login' exact>\n            <Login/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  }\n}","import { updateObject } from '../utility';\nimport {AUTH_FAIL, AUTH_LOGOUT, AUTH_START, AUTH_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false\n}\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n}\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    error: null,\n    loading: false\n  });\n}\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n}\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null\n  });\n}\n\nconst reducer = (state=initialState, action) => {\n  switch (action.type) {\n    case AUTH_START: return authStart(state, action);\n    case AUTH_SUCCESS: return authSuccess(state, action);\n    case AUTH_FAIL: return authFail(state, action);\n    case AUTH_LOGOUT: return authLogout(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport authReducer from \"./reducers/authReducer\";\n\n\nlet reducers = combineReducers({\n  auth: authReducer,\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\n));\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}