{"version":3,"sources":["components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["MyTextField","placeholder","props","useField","field","meta","errorText","error","touched","TextField","helperText","submit","surname","name","lastName","phone","address","inn","setSubmitting","axios","then","res","data","initialValues","UserForm","Box","marginTop","Container","maxWidth","Card","CardContent","Typography","variant","validateOnChange","validationSchema","object","string","required","number","onSubmit","values","errors","isSubmitting","isValidating","autoComplete","marginBottom","FormGroup","type","label","Button","color","disabled","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23fe6cc5.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Button, Card, CardContent, FormGroup, TextField, Typography } from '@material-ui/core';\nimport {Form, Formik, useField} from 'formik';\nimport { number, object, string } from 'yup';\nimport Container from \"@material-ui/core/Container\";\nimport * as axios from \"axios\";\n\nconst MyTextField = ({placeholder, ...props}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n      <TextField\n          placeholder={placeholder}\n          {...field}\n          helperText={errorText}\n          error={!!errorText}\n      />\n  )\n\n}\n\nconst submit = ({surname, name, lastName, phone, address, inn}, { setSubmitting }) => {\n  axios.post(`http://127.0.0.1:8000/api/user/create/`, {surname, name, lastName, phone, address, inn})\n      .then(res => {\n        return res.data\n      })\n  setSubmitting(false)\n}\n\nconst initialValues = {\n  surname: '',\n  name: '',\n  lastName: '',\n  phone: '',\n  address: '',\n  inn: ''\n};\n\nfunction UserForm (props) {\n  return (\n      <Box marginTop={4}>\n        <Container maxWidth=\"md\">\n          <Card>\n            <CardContent>\n              <Typography variant=\"h4\">New User</Typography>\n\n              <Formik\n                  validateOnChange={true}\n                  validationSchema={\n                    object({\n                      surname: string().required(),\n                      name: string().required(),\n                      lastName: string().required(),\n                      phone: number().required(),\n                      address: string().required(),\n                      inn: string().required(),\n                    })\n                  }\n                  initialValues={initialValues} onSubmit={submit}>\n                {({ values, errors, isSubmitting, isValidating }) => (\n                    <Form autoComplete='off'>\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Surname' name=\"surname\" type='input' label=\"Surname\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Name' name=\"name\" type='input' label=\"Name\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n\n                        <FormGroup>\n                          <MyTextField placeholder='Last name' name=\"lastName\" type='input' label=\"Last name\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Phone' name=\"phone\" type='input' label=\"Phone\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Address' name=\"address\" type='input' label=\"Address\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Inn' name=\"inn\" type='input' label=\"Inn\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Button variant={\"contained\"} color={\"primary\"} type=\"submit\" disabled={isSubmitting || isValidating}>Save</Button>\n                    </Form>\n                )}\n              </Formik>\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n\n  );\n}\n\nexport default UserForm\n\n// <h3 className='text-center mb-3'>Please fill up all necessary fields in form below</h3>\n// <form className=\"row g-3\">\n//   <div className=\"col-md-4\">\n//     <label htmlFor=\"surname\" className=\"form-label\">Surname</label>\n//     <input type=\"text\" className=\"form-control\" id=\"Surname\"/>\n//   </div>\n//   <div className=\"col-md-4\">\n//     <label htmlFor=\"name\" className=\"form-label\">Name</label>\n//     <input type=\"text\" className=\"form-control\" id=\"name\"/>\n//   </div>\n//   <div className=\"col-md-4\">\n//     <label htmlFor=\"lastName\" className=\"form-label\">Last name</label>\n//     <input type=\"text\" className=\"form-control\" id=\"lastName\"/>\n//   </div>\n//   <div className=\"col-12\">\n//     <label htmlFor=\"phoneNumber\" className=\"form-label\">Phone number</label>\n//     <input type=\"number\" className=\"form-control\" id=\"phoneNumber\" placeholder=\"Input your phone number\"/>\n//   </div>\n//   <div className=\"col-12\">\n//     <label htmlFor=\"inputAddress\" className=\"form-label\">Address</label>\n//     <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"Input address\"/>\n//   </div>\n//   <div className=\"col-12\">\n//     <label htmlFor=\"inn\" className=\"form-label\">Inn</label>\n//     <input type=\"text\" className=\"form-control\" id=\"inn\" placeholder=\"Input inn\"/>\n//   </div>\n//   <div className=\"col-12\">\n//     <button type=\"submit\" className=\"btn btn-primary\">Sign in</button>\n//   </div>\n// </form>","import React from 'react';\nimport './App.css';\nimport UserForm from \"./components/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserForm />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}