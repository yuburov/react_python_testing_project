{"version":3,"sources":["components/Form.js","components/Admin.js","App.js","reportWebVitals.js","index.js"],"names":["MyTextField","placeholder","props","useField","field","meta","errorText","error","touched","TextField","helperText","submit","surname","name","lastName","phone","address","inn","setSubmitting","resetForm","axios","then","res","console","log","data","initialValues","UserForm","Box","marginTop","Container","maxWidth","Card","CardContent","Typography","variant","validateOnChange","validationSchema","object","string","required","number","onSubmit","values","errors","isSubmitting","isValidating","autoComplete","marginBottom","FormGroup","type","label","Button","color","disabled","useStyles","makeStyles","table","minWidth","Admin","useState","users","setUsers","useEffect","headers","localStorage","getItem","classes","style","textAlign","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","user","scope","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sWAOMA,EAAc,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,YAAgBC,EAAW,iCACzBC,YAASD,GADgB,mBACxCE,EADwC,KACjCC,EADiC,KAEzCC,EAAYD,EAAKE,OAASF,EAAKG,QAAUH,EAAKE,MAAQ,GAC5D,OACI,cAACE,EAAA,EAAD,yBACIR,YAAaA,GACTG,GAFR,IAGIM,WAAYJ,EACZC,QAASD,MAKbK,EAAS,SAAC,EAAD,GAAmF,IAAjFC,EAAgF,EAAhFA,QAASC,EAAuE,EAAvEA,KAAMC,EAAiE,EAAjEA,SAAUC,EAAuD,EAAvDA,MAAOC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,IAAQC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAC9EC,OAAA,yCAAqD,CAACR,UAASC,OAAMC,WAAUC,QAAOC,UAASC,QAC3FI,MAAK,SAAAC,GAGJ,OAFAH,EAAU,IACVI,QAAQC,IAAIF,EAAIG,MACTH,EAAIG,QAEjBP,GAAc,IAGVQ,EAAgB,CACpBd,QAAS,GACTC,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,QAAS,GACTC,IAAK,IA2EQU,MAxEf,SAAmBzB,GACjB,OACI,cAAC0B,EAAA,EAAD,CAAKC,UAAW,EAAhB,SACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,sBAEA,cAAC,IAAD,CACIC,kBAAkB,EAClBC,iBACEC,YAAO,CACL1B,QAAS2B,cAASC,WAClB3B,KAAM0B,cAASC,WACf1B,SAAUyB,cAASC,WACnBzB,MAAO0B,cAASD,WAChBxB,QAASuB,cAASC,WAClBvB,IAAKsB,cAASC,aAGlBd,cAAeA,EAAegB,SAAU/B,EAZ5C,SAaG,cAAGgC,OAAH,EAAWC,OAAX,IAAmBC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,aAAjC,OACG,eAAC,IAAD,CAAMC,aAAa,MAAnB,UACE,cAACnB,EAAA,EAAD,CAAKoB,aAAc,EAAnB,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAahD,YAAY,UAAUY,KAAK,UAAUqC,KAAK,QAAQC,MAAM,gBAIzE,cAACvB,EAAA,EAAD,CAAKoB,aAAc,EAAnB,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAahD,YAAY,OAAOY,KAAK,OAAOqC,KAAK,QAAQC,MAAM,aAInE,cAACvB,EAAA,EAAD,CAAKoB,aAAc,EAAnB,SAEE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAahD,YAAY,YAAYY,KAAK,WAAWqC,KAAK,QAAQC,MAAM,kBAI5E,cAACvB,EAAA,EAAD,CAAKoB,aAAc,EAAnB,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAahD,YAAY,QAAQY,KAAK,QAAQqC,KAAK,QAAQC,MAAM,cAIrE,cAACvB,EAAA,EAAD,CAAKoB,aAAc,EAAnB,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAahD,YAAY,UAAUY,KAAK,UAAUqC,KAAK,QAAQC,MAAM,gBAIzE,cAACvB,EAAA,EAAD,CAAKoB,aAAc,EAAnB,SACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,CAAahD,YAAY,MAAMY,KAAK,MAAMqC,KAAK,QAAQC,MAAM,YAIjE,cAACC,EAAA,EAAD,CAAQjB,QAAS,YAAakB,MAAO,UAAWH,KAAK,SAASI,SAAUT,GAAgBC,EAAxF,kC,wECrFhBS,EAAYC,YAAW,CAC3BC,MAAO,CACLC,SAAU,OA0DCC,MAtDf,SAAezD,GAAQ,IAAD,EACM0D,mBAAS,IADf,mBACbC,EADa,KACNC,EADM,KAGpBC,qBAAU,WACR3C,MAAA,6BAAwC,CACtC4C,QAAS,CACP,eAAgB,mBACZ,cAAgB,SAAhB,OAA0BC,aAAaC,QAAQ,aAGtD7C,MAAK,SAAAC,GACAwC,EAASxC,EAAIG,WAEnB,IAEF,IAAM0C,EAAUZ,IAEhB,OACI,cAAC3B,EAAA,EAAD,CAAKC,UAAW,EAAhB,SACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,oBAAIqC,MAAO,CAACC,UAAW,UAAvB,2BACA,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,eAACC,EAAA,EAAD,CAAOC,UAAWP,EAAQV,MAAOkB,aAAW,eAA5C,UACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,kBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,mBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,qBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBAGJ,cAACC,EAAA,EAAD,UACGnB,EAAMoB,KAAI,SAACC,GAAD,OACP,eAACL,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWP,UAAU,KAAKY,MAAM,MAAhC,SACGD,EAAKtE,UAER,cAACkE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAKrE,OAC/B,cAACiE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAKpE,WAC/B,cAACgE,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAKnE,QAC/B,cAAC+D,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAKlE,UAC/B,cAAC8D,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BG,EAAKjE,QARlBiE,EAAKrE,sBChCzBuE,MAjBf,WACE,OACE,cAAC,IAAD,UACE,qBAAKV,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOW,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,cAAcC,OAAK,EAA/B,SACE,cAAC,EAAD,cCHGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBpE,MAAK,YAAkD,IAA/CqE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.b777d7ac.chunk.js","sourcesContent":["import React from 'react';\nimport { Box, Button, Card, CardContent, FormGroup, TextField, Typography } from '@material-ui/core';\nimport {Form, Formik, useField} from 'formik';\nimport { number, object, string } from 'yup';\nimport Container from \"@material-ui/core/Container\";\nimport * as axios from \"axios\";\n\nconst MyTextField = ({placeholder, ...props}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n      <TextField\n          placeholder={placeholder}\n          {...field}\n          helperText={errorText}\n          error={!!errorText}\n      />\n  )\n}\n\nconst submit = ({surname, name, lastName, phone, address, inn}, { setSubmitting, resetForm }) => {\n   axios.post(`http://127.0.0.1:8000/api/user/create/`, {surname, name, lastName, phone, address, inn})\n      .then(res => {\n        resetForm({})\n        console.log(res.data)\n        return res.data\n      })\n  setSubmitting(false)\n}\n\nconst initialValues = {\n  surname: '',\n  name: '',\n  lastName: '',\n  phone: '',\n  address: '',\n  inn: ''\n};\n\nfunction UserForm (props) {\n  return (\n      <Box marginTop={4}>\n        <Container maxWidth=\"md\">\n          <Card>\n            <CardContent>\n              <Typography variant=\"h4\">New User</Typography>\n\n              <Formik\n                  validateOnChange={true}\n                  validationSchema={\n                    object({\n                      surname: string().required(),\n                      name: string().required(),\n                      lastName: string().required(),\n                      phone: number().required(),\n                      address: string().required(),\n                      inn: string().required(),\n                    })\n                  }\n                  initialValues={initialValues} onSubmit={submit}>\n                {({ values, errors, isSubmitting, isValidating }) => (\n                    <Form autoComplete='off'>\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Surname' name=\"surname\" type='input' label=\"Surname\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Name' name=\"name\" type='input' label=\"Name\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n\n                        <FormGroup>\n                          <MyTextField placeholder='Last name' name=\"lastName\" type='input' label=\"Last name\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Phone' name=\"phone\" type='input' label=\"Phone\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Address' name=\"address\" type='input' label=\"Address\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Inn' name=\"inn\" type='input' label=\"Inn\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Button variant={\"contained\"} color={\"primary\"} type=\"submit\" disabled={isSubmitting || isValidating}>Save</Button>\n                    </Form>\n                )}\n              </Formik>\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n\n  );\n}\n\nexport default UserForm","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {Box} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport * as axios from \"axios\";\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 320,\n  },\n});\n\nfunction Admin(props) {\n  const [users, setUsers] = useState([])\n\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/api/`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n            \"Authorization\": `Token ${localStorage.getItem('token')}`\n        }\n    })\n    .then(res => {\n          setUsers(res.data)\n        })\n  },[])\n\n  const classes = useStyles();\n\n  return (\n      <Box marginTop={5}>\n        <Container maxWidth=\"md\">\n          <h2 style={{textAlign: 'center'}}>List of users</h2>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Surname</TableCell>\n                  <TableCell align=\"right\">Name</TableCell>\n                  <TableCell align=\"right\">Last name</TableCell>\n                  <TableCell align=\"right\">Phone</TableCell>\n                  <TableCell align=\"right\">Address</TableCell>\n                  <TableCell align=\"right\">Inn</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map((user) => (\n                    <TableRow key={user.name}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {user.surname}\n                      </TableCell>\n                      <TableCell align=\"right\">{user.name}</TableCell>\n                      <TableCell align=\"right\">{user.lastName}</TableCell>\n                      <TableCell align=\"right\">{user.phone}</TableCell>\n                      <TableCell align=\"right\">{user.address}</TableCell>\n                      <TableCell align=\"right\">{user.inn}</TableCell>\n                    </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Container>\n      </Box>\n  );\n}\n\nexport default Admin;\n\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport UserForm from \"./components/Form\";\nimport Admin from \"./components/Admin\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path='/' exact>\n            <UserForm/>\n          </Route>\n          <Route path='/admin_page' exact>\n            <Admin/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}