{"version":3,"sources":["redux/actions/actionTypes.js","redux/actions/auth.js","components/Form.js","components/login/Login.js","components/Admin.js","components/navbar/Navbar.js","App.js","reportWebVitals.js","redux/utility.js","redux/reducers/authReducer.js","redux/redux-store.js","index.js"],"names":["AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","authSuccess","token","type","actionTypes","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","authLogin","username","password","axios","post","then","res","data","key","expirationDate","Date","getTime","setItem","catch","err","MyTextField","placeholder","props","useField","field","meta","errorText","touched","TextField","helperText","useStyles","makeStyles","theme","root","width","marginTop","spacing","marginBottom","initialValues","surname","name","lastName","phone","address","inn","UserForm","useState","show","setShow","useDispatch","classes","errorMessage","useSelector","state","auth","style","textAlign","color","message","Box","Container","maxWidth","className","Alert","onClose","Card","CardContent","validateOnChange","validationSchema","object","string","required","number","onSubmit","setSubmitting","resetForm","values","errors","isSubmitting","isValidating","autoComplete","FormGroup","label","Button","variant","disabled","FormikField","as","fullWidth","SignupSchema","Yup","shape","min","Login","isAuthenticated","display","justifyContent","dirty","isValid","table","minWidth","Admin","users","setUsers","useEffect","headers","getItem","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","user","scope","Navbar","exact","to","activeClassName","onClick","App","undefined","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","loading","authStart","action","authLogout","reducer","reducers","combineReducers","authReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8f56cb3.chunk.js","sourcesContent":["export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  }\n}\n\nexport const authSuccess = token => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  }\n}\n\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  }\n}\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout());\n    }, expirationTime * 1000)\n  }\n}\n\nexport const authLogin = (username, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n      username: username,\n      password: password\n    })\n        .then(res => {\n          const token = res.data.key;\n          const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n          localStorage.setItem('token', token);\n          localStorage.setItem('expirationDate', expirationDate);\n          dispatch(authSuccess(token));\n          dispatch(checkAuthTimeout(3600))\n        })\n        .catch(err => {\n          dispatch(authFail(err))\n        })\n  }\n}\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n    if (token === undefined) {\n      dispatch(logout());\n    } else {\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\n      if ( expirationDate <= new Date() ) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess(token));\n        dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n      }\n    }\n  }\n}","import React, {useState} from 'react';\nimport { Box, Button, Card, CardContent, FormGroup, TextField, Typography } from '@material-ui/core';\nimport {Form, Formik, useField} from 'formik';\nimport { number, object, string } from 'yup';\nimport Container from \"@material-ui/core/Container\";\nimport * as axios from \"axios\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authFail} from \"../redux/actions/auth\";\n\nconst MyTextField = ({placeholder, ...props}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : '';\n  return (\n      <TextField\n          placeholder={placeholder}\n          {...field}\n          helperText={errorText}\n          error={!!errorText}\n      />\n  )\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n    marginBottom: '25px'\n  },\n}));\n\nconst initialValues = {\n  surname: '',\n  name: '',\n  lastName: '',\n  phone: '',\n  address: '',\n  inn: ''\n};\n\nfunction UserForm (props) {\n  const [show, setShow] = useState(false)\n  const dispatch = useDispatch()\n  const classes = useStyles();\n  const submit = ({surname, name, lastName, phone, address, inn}, { setSubmitting, resetForm }) => {\n    axios.post(`http://127.0.0.1:8000/api/user/create/`, {surname, name, lastName, phone, address, inn})\n        .then(res => {\n          resetForm({})\n          setShow(true)\n          return res.data\n        })\n        .catch(error => {\n          dispatch(authFail(error))\n        })\n    setSubmitting(false)\n  }\n  let errorMessage = null\n  const error = useSelector(state => state.auth.error)\n  if (error) {\n    errorMessage = (\n        <div style={{marginBottom: '20px', textAlign: 'center'}}>\n          <p style={{color: 'red'}}>{error.message}</p>\n        </div>\n    );\n  }\n  return (\n      <Box marginTop={5} marginBottom={4}>\n        <h1 style={{textAlign: 'center', color: 'whitesmoke'}}>Registration form</h1>\n        {errorMessage}\n        <Container maxWidth=\"md\">\n          {show ?\n              <div className={classes.root}>\n                  <Alert onClose={() => setShow(false)}>\n                  <strong>Congrats!</strong> You have successfully registered</Alert>\n              </div>\n              : null}\n          <Card>\n            <CardContent>\n              <Formik\n                  validateOnChange={true}\n                  validationSchema={\n                    object({\n                      surname: string().required(),\n                      name: string().required(),\n                      lastName: string().required(),\n                      phone: number().required(),\n                      address: string().required(),\n                      inn: string().required(),\n                    })\n                  }\n                  initialValues={initialValues} onSubmit={submit}>\n                {({ values, errors, isSubmitting, isValidating }) => (\n                    <Form autoComplete='off'>\n                      <Box marginBottom={2} marginTop={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Surname' name=\"surname\" type='input' label=\"Surname\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Name' name=\"name\" type='input' label=\"Name\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n\n                        <FormGroup>\n                          <MyTextField placeholder='Last name' name=\"lastName\" type='input' label=\"Last name\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Phone' name=\"phone\" type='input' label=\"Phone\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Address' name=\"address\" type='input' label=\"Address\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Box marginBottom={2}>\n                        <FormGroup>\n                          <MyTextField placeholder='Inn' name=\"inn\" type='input' label=\"Inn\" />\n                        </FormGroup>\n                      </Box>\n\n                      <Button variant={\"contained\"} color={\"primary\"} type=\"submit\" disabled={isSubmitting || isValidating}>Save</Button>\n                    </Form>\n                )}\n              </Formik>\n            </CardContent>\n          </Card>\n        </Container>\n      </Box>\n\n  );\n}\n\nexport default UserForm","import React from \"react\";\nimport {Formik, Form, ErrorMessage, Field} from \"formik\";\nimport * as Yup from \"yup\";\nimport Button from \"@material-ui/core/Button\";\nimport {TextField} from \"@material-ui/core\";\nimport './Login.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {authLogin} from \"../../redux/actions/auth\";\nimport Admin from \"../Admin\";\n\nconst FormikField = ({ name, label, type = \"text\", required = false}) => {\n  return (\n      <div className=\"formikField\">\n        <Field\n            required={required}\n            autoComplete=\"off\"\n            as={TextField}\n            label={label}\n            name={name}\n            fullWidth\n            type={type}\n            helperText={<ErrorMessage name={name} />}\n        />\n      </div>\n  );\n};\n\nconst initialValues = {\n  username: \"\",\n  password: \"\"\n};\n\nconst SignupSchema = Yup.object().shape({\n  username: Yup.string()\n      .min(4, \"Too Short!\")\n      .required(\"Required\"),\n  password: Yup.string()\n      .min(5, \"Too Short!\")\n      .required(\"Required\")\n});\n\nconst Login = (props) => {\n  const isAuthenticated = useSelector((state => state.auth.token !== null))\n  const dispatch = useDispatch()\n  const handleSubmit = (values) => {\n    dispatch(authLogin(values.username, values.password))\n  };\n\n  let errorMessage = null\n  const error = useSelector(state => state.auth.error)\n  if (error) {\n    errorMessage = (\n        <div style={{marginBottom: '20px', textAlign: 'center'}}>\n          <p style={{color: 'red'}}>{error.message}</p>\n        </div>\n    );\n    }\n\n  if (isAuthenticated) {\n    return <Admin/>\n  }\n    return (\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <div className=\"login\">\n            <h1 style={{textAlign: 'center'}}>Sign In</h1>\n            {errorMessage}\n            <Formik\n                initialValues={initialValues}\n                onSubmit={handleSubmit}\n                validationSchema={SignupSchema}\n            >\n              {({dirty, isValid}) => {\n                return (\n                    <Form>\n                      <FormikField name=\"username\" label=\"Name\" required/>\n                      <FormikField name=\"password\" type='password' label=\"Password\" required/>\n                      <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          disabled={!dirty || !isValid}\n                          type=\"submit\"\n                      >\n                        Sign In\n                      </Button>\n                    </Form>\n                );\n              }}\n            </Formik>\n          </div>\n        </div>\n    )\n}\n\nexport default Login;","import React, {useEffect, useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {Box} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport * as axios from \"axios\";\nimport {useSelector} from \"react-redux\";\nimport Login from \"./login/Login\";\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 320,\n  },\n});\n\nfunction Admin(props) {\n  const [users, setUsers] = useState([])\n  const isAuthenticated = useSelector((state => state.auth.token !== null))\n\n  useEffect(() => {\n    axios.get(`http://127.0.0.1:8000/api/`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n            \"Authorization\": `Token ${localStorage.getItem('token')}`\n        }\n    })\n    .then(res => {\n          setUsers(res.data)\n        })\n  },[])\n\n  const classes = useStyles();\n  if (!isAuthenticated) {\n    return <Login/>\n  }\n  return (\n      <Box marginTop={5} marginBottom={4}>\n        <Container maxWidth=\"md\">\n          <h1 style={{textAlign: 'center', color: 'white'}}>List of users</h1>\n          <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Surname</TableCell>\n                  <TableCell align=\"right\">Name</TableCell>\n                  <TableCell align=\"right\">Last name</TableCell>\n                  <TableCell align=\"right\">Phone</TableCell>\n                  <TableCell align=\"right\">Address</TableCell>\n                  <TableCell align=\"right\">Inn</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {users.map((user) => (\n                    <TableRow key={user.name}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {user.surname}\n                      </TableCell>\n                      <TableCell align=\"right\">{user.name}</TableCell>\n                      <TableCell align=\"right\">{user.lastName}</TableCell>\n                      <TableCell align=\"right\">{user.phone}</TableCell>\n                      <TableCell align=\"right\">{user.address}</TableCell>\n                      <TableCell align=\"right\">{user.inn}</TableCell>\n                    </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Container>\n      </Box>\n  );\n}\n\nexport default Admin;\n\n","import React from \"react\";\nimport {Link, NavLink} from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {logout} from \"../../redux/actions/auth\";\n\nconst Navbar = () => {\n\n  const isAuthenticated = useSelector((state => state.auth.token !== null))\n  const dispatch = useDispatch()\n  const quit = () => {\n    dispatch(logout())\n  }\n  return (\n      <nav>\n        <div className=\"logo\">\n          Test<font>Project</font>\n        </div>\n        <ul className=\"menu-list\">\n          <li>\n            <NavLink exact to='/' activeClassName=\"active\">\n              Home\n            </NavLink>\n          </li>\n          { isAuthenticated ?\n              <>\n                <li>\n                  <NavLink exact to='/admin_page' activeClassName=\"active\">\n                    Admin page\n                  </NavLink>\n                </li>\n                <li>\n                  <Link activeClassName=\"active\">\n                    <span onClick={quit}>Logout</span>\n                  </Link>\n                </li>\n              </>\n              :\n              <li>\n                <NavLink exact to='/login' activeClassName=\"active\">\n                  Login\n                </NavLink>\n              </li>\n          }\n        </ul>\n      </nav>\n  );\n};\n\nexport default Navbar;","import React, {useEffect} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport UserForm from \"./components/Form\";\nimport Admin from \"./components/Admin\";\nimport Login from \"./components/login/Login\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport {useDispatch} from \"react-redux\";\nimport {authCheckState} from \"./redux/actions/auth\";\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(authCheckState())\n  },[])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path='/' exact>\n            <UserForm/>\n          </Route>\n          <Route path='/admin_page' exact>\n            <Admin/>\n          </Route>\n          <Route path='/login' exact>\n            <Login/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  }\n}","import { updateObject } from '../utility';\nimport {AUTH_FAIL, AUTH_LOGOUT, AUTH_START, AUTH_SUCCESS} from \"../actions/actionTypes\";\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false\n}\n\nconst authStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n}\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    error: null,\n    loading: false\n  });\n}\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n}\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {\n    token: null\n  });\n}\n\nconst reducer = (state=initialState, action) => {\n  switch (action.type) {\n    case AUTH_START: return authStart(state, action);\n    case AUTH_SUCCESS: return authSuccess(state, action);\n    case AUTH_FAIL: return authFail(state, action);\n    case AUTH_LOGOUT: return authLogout(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport thunkMiddleware from 'redux-thunk'\nimport authReducer from \"./reducers/authReducer\";\n\n\nlet reducers = combineReducers({\n  auth: authReducer,\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\n));\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}